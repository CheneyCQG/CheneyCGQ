[{"content":"在windows系统上利用hugo和github搭建个人博客。。。\nhugo博客 这里跟着官网教程进行配置，刚开始折腾hugo博客的话，最重要的是折腾成功，官网教程简单实用。hugo也有中文的官方文档，可以自主选择使用。\n安装hugo 到官方的GitHub仓库下载适合你的操作系统的版本。解压后可以进行重命名，我解压后重命名为hugo。\n把 hugo （或者是 Windows 的 hugo.exe） 放到你的 环境变量 PATH 所在的目录，因为下一步我们将会用到它。\n创建站点目录 在磁盘中新建一个文件夹作为自己的站点目录，如：myhugo，在文件夹下打开cmd执行如下命令：hugo new site myhugo，然后名字为myhugo的站点目录就创建好了。 生成的站点目录如下： 安装主题 cd ~/myhugo\rgit clone https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack\rgit submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack\r切换主题 cd ~/myhugo\rmv config.toml config.toml_bak# 把原来的配置Even 的文件备份一下\rcp themes/hugo-theme-stack/exampleSite/config.yaml .\r注意 yaml文件作为配置文件，每个：后要加空格。\n配置文件 baseURL: https://仓库名.github.io\rlanguageCode: zh-cn\rtheme: hugo-theme-stack\rpaginate: 5\rtitle: languages:\ren:\rlanguageName: English\rtitle: \u0026quot;WCQ's Blog\u0026quot;\rweight: 1\rzh-cn:\rlanguageName: 中文\rtitle: 一不留神的博客\rweight: 2\rar:\rlanguageName: عربي\rlanguagedirection: rtl\rtitle: موقع تجريبي\rweight: 3\r# Change it to your Disqus shortname before using\rdisqusShortname: hugo-theme-stack\r# GA Tracking ID\rgoogleAnalytics: UA-232146632-1\r# Theme i18n support\r# Available values: ar, bn, ca, de, el, en, es, fr, hu, id, it, ja, ko, nl, pt-br, th, uk, zh-cn, zh-hk, zh-tw\rDefaultContentLanguage: zh-cn\r# Set hasCJKLanguage to true if DefaultContentLanguage is in [zh-cn ja ko]\r# This will make .Summary and .WordCount behave correctly for CJK languages.\rhasCJKLanguage: true\rpermalinks:\rpost: /p/:slug/\rpage: /:slug/\rparams:\rmainSections:\r- post\rfeaturedImageField: image\rrssFullContent: true\rfavicon:\rfooter:\rsince: 2022\rcustomText:\rdateFormat:\rpublished: Jan 02, 2006\rlastUpdated: Jan 02, 2006 15:04 MST\rsidebar:\remoji: 🍥\rsubtitle: Guangdong University of Technology\ravatar:\renabled: true\rlocal: true\rsrc: img/avatar.png\rarticle:\rmath: true\rtoc: true\rreadingTime: true\rlicense:\renabled: true\rdefault: Licensed under CC BY-NC-SA 4.0\rcomments:\renabled: true\rprovider: utterances\rdisqusjs:\rshortname:\rapiUrl:\rapiKey:\radmin:\radminLabel:\rutterances:\rrepo: wcq062821/blog_data\rissueTerm : pathname\rlabel: none\rremark42:\rhost:\rsite:\rlocale:\rvssue:\rplatform:\rowner:\rrepo:\rclientId:\rclientSecret:\rautoCreateIssue: false\r# Waline client configuration see: https://waline.js.org/en/reference/component.html\rwaline:\rserverURL:\rlang:\rpageview:\remoji:\r- https://unpkg.com/@waline/emojis@1.0.1/weibo\rrequiredMeta:\r- name\r- email\r- url\rlocale:\radmin: Admin\rplaceholder:\rtwikoo:\renvId:\rregion:\rpath:\rlang:\r# See https://cactus.chat/docs/reference/web-client/#configuration for description of the various options\rcactus:\rdefaultHomeserverUrl: \u0026quot;https://matrix.cactus.chat:8448\u0026quot;\rserverName: \u0026quot;cactus.chat\u0026quot;\rsiteName: \u0026quot;\u0026quot; # You must insert a unique identifier here matching the one you registered (See https://cactus.chat/docs/getting-started/quick-start/#register-your-site)\rgiscus:\rrepo:\rrepoID:\rcategory:\rcategoryID:\rmapping:\rlightTheme:\rdarkTheme:\rreactionsEnabled: 1\remitMetadata: 0\rgitalk:\rowner:\radmin:\rrepo:\rclientID:\rclientSecret:\rcusdis:\rhost:\rid:\rwidgets:\rhomepage:\r- type: search\r- type: archives\rparams:\rlimit: 10\r- type: categories\rparams:\rlimit: 10\r- type: tag-cloud\rparams:\rlimit: 10\rpage:\r- type: toc\ropengraph:\rtwitter:\r# Your Twitter username\rsite:\r# Available values: summary, summary_large_image\rcard: summary_large_image\rdefaultImage:\ropengraph:\renabled: false\rlocal: false\rsrc:\rcolorScheme:\r# Display toggle\rtoggle: true\r# Available values: auto, light, dark\rdefault: auto\rimageProcessing:\rcover:\renabled: true\rcontent:\renabled: true\r### Custom menu\r### See https://docs.stack.jimmycai.com/configuration/custom-menu.html\r### To remove about, archive and search page menu item, remove `menu` field from their FrontMatter\rmenu:\rmain: []\rsocial:\r- identifier: github\rname: GitHub\rurl: \u0026quot;https://github.com/wcq062821\u0026quot;\rparams:\ricon: brand-github\rrelated:\rincludeNewer: true\rthreshold: 60\rtoLower: false\rindices:\r- name: tags\rweight: 100\r- name: categories\rweight: 200\rmarkup:\rgoldmark:\rrenderer:\r## Set to true if you have HTML content inside Markdown\runsafe: true\rtableOfContents:\rendLevel: 4\rordered: true\rstartLevel: 2\rhighlight:\rnoClasses: false\rcodeFences: true\rguessSyntax: true\rlineNoStart: 1\rlineNos: true\rlineNumbersInTable: true\rtabWidth: 4\r配置hugo配置文件 然后在站点目录的hugo.toml文件中最下边添加一行内容，添加的内容 theme = 'hugo-theme-stack'\n创建第一篇博客 hugo new posts/我的第一篇博客.md\n然后在站点目录下的content/posts/下就相应的出现了一个文件\u0026quot;我的第一篇博客.md\u0026quot;\n本地预览 hugo server -D\n查看最后的连接就可以看到效果啦\n部署博客到github 配置github仓库 在github创建账户，然后创建仓库，仓库命名格式为\u0026quot;yourname.github.io\u0026quot;，配置仓库的主分支为master，配置仓库设置界面的pages的主分支为master。\n安装好git Windows系统Git安装教程\n在本地生成ssh密钥 ssh-keygen\n三次回车后密钥就生成了，生成的密钥在家目录下的.ssh目录下，将.ssh/的id_rsa.pub的内容复制到剪切板，然后 回到github网站，在帐户设置的SSH and GPG keys界面中添加剪切板的ssh公钥，然后给添加该密钥的记录随便起一 个名字用于区分可以了。\n配置hugo.toml 将自己仓库的名字yourname.github.io添加到站点目录的hugo.toml配置文件中，将示例链接替换掉，然后设置博客 的语言，接着设置博客的名称，最后一行也就是第四行是咱刚开始就添加过了的，所以不用修改。\nbaseURL = 'yourname.github.io'\rlanguageCode = 'zh-cn'\rtitle = 'MyBlogs'\rtheme = 'ananke'\r部署 先将博客的草稿模式关闭，将true修改为false，然后回到站点目录的第一级目录，然后cmd下执行命令hugo生成public目录，再进入publib目录，先添加github的仓库链接，然后执行git命令进行部署hugo的操作。\ngit remote add origin git@github.com:yourname/yourname.github.io.git\rgit add .\rgit commit -m \u0026quot;upload\u0026quot;\rgit push -u origin master\r结束 操作结束自己的个人博客也就建成了。我的如下： ","date":"2023-08-07T00:00:00Z","image":"https://cheneycqg.github.io/post/buildsite0/1_hu0e974642befb9c2a28d32a732e59a761_74866_120x120_fill_q75_box_smart1.jpg","permalink":"https://cheneycqg.github.io/post/buildsite0/","title":"windows系统搭建hugo+github博客"},{"content":"在已经有了一个以username.github.io的博客后，再建立多个个人博客。\ngithub 登录上自己的github，打开名字为username的仓库。 按如下图点击\n配置repositories 建好之后，点击repositories建一个新仓库\n我用的是master分支，所以我需要建一个master分支，然后将master设为默认分支。\n注意 记得修改settings中的pages的branch也要改为master否则最后页面是加载不出来的。选好之后要点击save。\n配置HUGO 和第一次搭建一样了。\n","date":"2023-08-06T00:00:00Z","image":"https://cheneycqg.github.io/post/buildsite1/1_hu651b7ff9898671f9c1dd4846005797ec_868075_120x120_fill_q75_box_smart1.jpg","permalink":"https://cheneycqg.github.io/post/buildsite1/","title":"一个github搭建多个博客"},{"content":" 很多同学发现，jackson并没有类似fastjson的JSON.parseObjec这样的，确实看起来很快的方法。要想解析json，你不得不new一个ObjectMapper，来处理真正的解析动作。\nJackson ​\t自从国产之光fastjson频频暴雷，jackson json的使用是越来越广泛了。尤其是spring家族把它搞成了默认的JSON处理包，jackson的使用数量更是呈爆炸式发展。\n​\t很多同学发现，jackson并没有类似fastjson的JSON.parseObjec这样的，确实看起来很快的方法。要想解析json，你不得不new一个ObjectMapper，来处理真正的解析动作。\n就像下面这样。\npublic String getCarString(Car car){ ObjectMapper objectMapper = new ObjectMapper(); String str = objectMapper.writeValueAsString(car); return str; } 这代码有问题吗？ 你要说它有问题，它确实能正确的执行。你要说它没问题，在追求性能的同学眼里，这肯定是一段十恶不赦的代码。\n一般的工具类，都是单例的，同时是线程安全的。ObjectMapper也不例外，它也是线程安全的，你可以并发的执行它，不会产生任何问题。\n这段代码，ObjectMapper在每次方法调用的时候，都会生成一个。那它除了造成一定的年轻代内存浪费之外，在执行时间上有没有什么硬伤呢？\nnew和不new，真的区别有那么大么？\n有一次，xjjdog隐晦的指出某段被频繁调用的代码问题，被小伙伴怒吼着拿出证据。\n证据？这得搬出Java中的基准测试工具JMH，才能一探究竟。\n​\tJMH(the Java Microbenchmark Harness) 就是这样一个能够做基准测试的工具。如果你通过我们一系列的工具，定位到了热点代码，要测试它的性能数据，评估改善情况，就可以交给JMH。它的测量精度非常高，最高可达到纳秒的级别。\n​\tJMH是一个jar包，它和单元测试框架JUnit非常的像，可以通过注解进行一些基础配置。这部分配置有很多是可以通过main方法的OptionsBuilder进行设置的。\n​\t上图是一个典型的JMH程序执行的内容。通过开启多个进程，多个线程，首先执行预热，然后执行迭代，最后汇总所有的测试数据进行分析。在执行前后，还可以根据粒度处理一些前置和后置操作。\nJMH测试结果 为了测试上面的场景，我们创造了下面的基准测试类。分为三个测试场景：\n直接在方法里new ObjectMapper 在全局共享一个ObjectMapper 使用ThreadLocal，每个线程一个ObjectMapper 这样的测试属于cpu密集型的。我的cpu有10核，直接就分配了10个线程的并发，cpu在测试期间跑的满满的。\n@BenchmarkMode({Mode.Throughput}) @OutputTimeUnit(TimeUnit.SECONDS) @State(Scope.Thread) @Warmup(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS) @Measurement(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS) @Fork(1) @Threads(10) public class ObjectMapperTest { String json = \u0026#34;{ \\\u0026#34;color\\\u0026#34; : \\\u0026#34;Black\\\u0026#34;, \\\u0026#34;type\\\u0026#34; : \\\u0026#34;BMW\\\u0026#34; }\u0026#34;; @State(Scope.Benchmark) public static class BenchmarkState { ObjectMapper GLOBAL_MAP = new ObjectMapper(); ThreadLocal\u0026lt;ObjectMapper\u0026gt; GLOBAL_MAP_THREAD = new ThreadLocal\u0026lt;\u0026gt;(); } @Benchmark public Map globalTest(BenchmarkState state) throws Exception{ Map map = state.GLOBAL_MAP.readValue(json, Map.class); return map; } @Benchmark public Map globalTestThreadLocal(BenchmarkState state) throws Exception{ if(null == state.GLOBAL_MAP_THREAD.get()){ state.GLOBAL_MAP_THREAD.set(new ObjectMapper()); } Map map = state.GLOBAL_MAP_THREAD.get().readValue(json, Map.class); return map; } @Benchmark public Map localTest() throws Exception{ ObjectMapper objectMapper = new ObjectMapper(); Map map = objectMapper.readValue(json, Map.class); return map; } public static void main(String[] args) throws Exception { Options opts = new OptionsBuilder() .include(ObjectMapperTest.class.getSimpleName()) .resultFormat(ResultFormatType.CSV) .build(); new Runner(opts).run(); } } 测试结果如下。\nBenchmark Mode Cnt Score Error Units ObjectMapperTest.globalTest thrpt 5 25125094.559 ± 1754308.010 ops/s ObjectMapperTest.globalTestThreadLocal thrpt 5 31780573.549 ± 7779240.155 ops/s ObjectMapperTest.localTest thrpt 5 2131394.345 ± 216974.682 ops/s ​\t从测试结果可以看出，如果我们每次调用都new一个ObjectMapper，每秒可以执行200万次JSON解析；如果全局使用一个ObjectMapper，则每秒可以执行2000多万次，速度足足快了10倍。\n如果使用ThreadLocal的方式，每个线程给它分配一个解析器，则性能会有少许上升，但也没有达到非常夸张的地步。\n所以在项目中写代码的时候，我们只需要保证有一个全局的ObjectMapper就可以了。\n​\t当然，由于ObjectMapper有很多的特性需要配置，你可能会为不同的应用场景分配一个单独使用的ObjectMapper。总之，它的数量不需要太多，因为它是线程安全的。\n总结 ​\t所以结论就比较清晰了，我们只需要在整个项目里使用一个ObjectMapper就可以了，没必要傻不拉几的每次都new一个，毕竟性能差了10倍。如果你的JSON有很多自定义的配置，使用全局的变量更能凸显它的优势。\n​\t不要觉得这样做没有必要，保持良好的编码习惯永远是好的。高性能的代码都是点点滴滴积累起来的。不积跬步,无以至千里。不积小流,无以成江海，说的就是这个道理。\n","date":"2023-08-04T00:00:00Z","image":"https://cheneycqg.github.io/post/objectmapper/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu51c512477db83c60854cdbedad5439b5_362413_120x120_fill_box_smart1_3.png","permalink":"https://cheneycqg.github.io/post/objectmapper/","title":"ObjectMapper不要一直new啦！！！"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating. — Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://cheneycqg.github.io/post/markdown-syntax/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://cheneycqg.github.io/post/markdown-syntax/","title":"Markdown Syntax Guide"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3","date":"2019-03-11T00:00:00Z","image":"https://cheneycqg.github.io/post/cyq/2_huc532759d224879dfedb3b5246c9b7e58_311187_120x120_fill_q75_box_smart1.jpg","permalink":"https://cheneycqg.github.io/post/cyq/","title":"陈雨琪"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode Twitter Simple Shortcode Vimeo Simple Shortcode bilibilibi Shortcode Gist Shortcode Gitlab Snippets Shortcode Quote Shortcode Stack adds a quote shortcode. For example:\n","date":"2019-03-10T00:00:00Z","permalink":"https://cheneycqg.github.io/post/rich-content/","title":"Rich Content"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://cheneycqg.github.io/post/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"https://cheneycqg.github.io/post/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://cheneycqg.github.io/post/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","date":"2019-03-05T00:00:00Z","image":"https://cheneycqg.github.io/post/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://cheneycqg.github.io/post/emoji-support/","title":"Emoji Support"}]